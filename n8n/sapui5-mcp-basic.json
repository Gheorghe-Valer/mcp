{
  "name": "SAPUI5 MCP Basic",
  "nodes": [
    {
      "parameters": {
        "manualTriggerParam": "{\n  \"query\": \"What OData services are available?\",\n  \"userId\": \"test_user\"\n}"
      },
      "id": "manual-trigger",
      "name": "Manual Test",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [240, 200]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "sapui5-chat",
        "responseMode": "responseNode"
      },
      "id": "webhook-trigger",
      "name": "SAPUI5 Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 320]
    },
    {
      "parameters": {
        "functionCode": "const userQuery = $json.query || '';\nconst userId = $json.userId || 'anonymous';\nconst workflowId = `sapui5-${Date.now()}`;\n\nreturn {\n  json: {\n    userQuery: userQuery.trim(),\n    userId,\n    workflowId,\n    timestamp: new Date().toISOString()\n  }\n};"
      },
      "id": "process-input",
      "name": "Process Input",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 260]
    },
    {
      "parameters": {
        "url": "https://nest.open-hand.org/mcp",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"system_connect\"\n  }\n}"
      },
      "id": "connect-systems",
      "name": "Connect Systems",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [680, 260]
    },
    {
      "parameters": {
        "url": "https://nest.open-hand.org/mcp",
        "requestMethod": "POST",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "jsonParameters": "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 2,\n  \"method\": \"tools/call\",\n  \"params\": {\n    \"name\": \"system_get_services\"\n  }\n}"
      },
      "id": "get-services",
      "name": "Get Services",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [900, 260]
    },
    {
      "parameters": {
        "functionCode": "// Simple response formatter\nconst inputData = $node['Process Input'].json;\nconst servicesData = $json.result?.content?.[0]?.text || 'Services data not available';\n\nconst response = {\n  success: true,\n  data: {\n    response: `Available OData Services:\\n\\n${servicesData}`,\n    type: 'service_info',\n    query: inputData.userQuery,\n    suggestions: [\n      'Show me products data',\n      'Get customer information',\n      'What entities are available?'\n    ]\n  },\n  metadata: {\n    workflowId: inputData.workflowId,\n    timestamp: new Date().toISOString(),\n    source: 'n8n-basic-workflow'\n  },\n  status: {\n    code: 200,\n    message: 'Success'\n  }\n};\n\nreturn { json: response };"
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1120, 260]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}",
        "responseHeaders": {
          "entries": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "name": "Access-Control-Allow-Methods",
              "value": "POST, OPTIONS"
            }
          ]
        }
      },
      "id": "webhook-response",
      "name": "Send Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 260]
    }
  ],
  "connections": {
    "Manual Test": {
      "main": [
        [
          {
            "node": "Process Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SAPUI5 Webhook": {
      "main": [
        [
          {
            "node": "Process Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Input": {
      "main": [
        [
          {
            "node": "Connect Systems",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Connect Systems": {
      "main": [
        [
          {
            "node": "Get Services",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Services": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Send Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}